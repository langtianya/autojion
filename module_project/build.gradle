/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'ocq' at '16-2-26 下午3:18' with Gradle 2.10
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.10/userguide/tutorial_java_projects.html
 */
 
 // 所有子项目的通用配置
subprojects {
// Apply the java plugin to add support for Java
    apply plugin: 'java'
    apply plugin: 'eclipse'
    
    version = rootProject.novatarTargetVersionWithDt
	
     // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava, javadoc, compileTestJava]*.options*.encoding = 'UTF-8'
	
  // In this section you declare where to find the dependencies of your project
    repositories {
	   //使用maven仓库（远程+本地库）
	  // You can declare any Maven/Ivy/file repository here.
        mavenCentral()
        mavenLocal()
    }
	
    //仅仅当/src/main/java或者/src/main/resources目录存在才能执行构建task
    build.onlyIf { file(projectDir.absolutePath + '/src/main/java').exists() ||
        file(projectDir.absolutePath + '/src/main/resources').exists()}
    
    eclipse {
       jdt {
	    // JVM 版本号要求
           sourceCompatibility = 1.8
           targetCompatibility = 1.8
       }
	   
       classpath {
           file {
		   //给每个项目的.classpath文件设置jreContainer的信息
              whenMerged { classpath ->
                classpath.entries.find { entry -> entry.kind == 'con' }.path = rootProject.eclipse_jreContainer
              }
           }
       }
    }
	
	 configurations {
    // 所有需要忽略的包定义在此
    all*.exclude group: '*-sample'
     }
	 
	  // 显示当前项目下所有用于 compile 的 jar.
  task listJars(description: 'Display all compile jars.') << {
    configurations.compile.each { File file -> println file.name }
  }
}

//创建项目目录
task createProDirs << {
   sourceSets*.java.srcDirs*.each { it.mkdirs() }
   sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}
