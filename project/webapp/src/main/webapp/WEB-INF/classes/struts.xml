<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
        "http://struts.apache.org/dtds/struts-2.3.dtd">

<struts>
<!--指定Struts 2默认的ObjectFactory Bean,该属性默认值是spring.--> 
    <!--<constant name="struts.objectFactory" value="spring" />-->
    <!--  启用ognl表达式，例如<s:property value="%{@java.lang.System@currentTimeMillis()}" />-->
    <constant name="struts.ognl.allowStaticMethodAccess" value="true"/>
    <!-- 是否开发模式 -->
    <constant name="struts.devMode" value="true"/>
    <!-- 国际化编码 -->
    <constant name="struts.i18n.encoding" value="GBK"/>
    <!-- 确定搜索包的路径。只要是结尾为action的包都要搜索。basePackage按照默认不用配置，如果配置，只会找以此配置开头的包 -->
    <!--<constant name="struts.convention.package.locators" value="action" />-->
    <!--  一个action名字的获取。比如为HelloWorldAction。按照配置，actionName为hello_world。 -->
    <!--<constant name="struts.convention.action.suffix" value="Action" />-->
    <!--  该属性指定需要Struts 2处理的请求后缀,该属性的默认值是action,即所有匹配*.action的请求都由Struts 2处理.如果用户需要指定多个请求后缀,则多个后缀之间以英文逗号(,)隔开. 扩展名可以指定为空。这样地址栏比较好看 -->
    <!--<constant name="struts.action.extension" value="action,jsp"/>-->
     <!-- 设置在class被修改时是否热加载，发布时要设置为false -->
    <constant name="struts.convention.classes.reload" value="true"/>
    <constant name="struts.multipart.maxSize" value="10485760"/>
      <!-- 设置即使没有@Action注释，依然创建Action映射。默认值是false。因为Convention-Plugin是约定优于配置的风格，
        可以不通过注解根据预先的定义就能访问相应Action中的方法 -->
    <constant name="struts.convention.action.mapAllMatches" value="true"/>
<!--   设置默认的父包，一般我们都设置一个default包继承自struts-default。大部分类再继承default。如果有特殊的类需要特殊的包，只能在action中再指定父包了。 -->
    <!--<constant name="struts.convention.default.parent.package" value="rest-default"/>-->
   
   <!--指定结果页面路径。 convention插件会自动在此路径中寻找文件。放到WEB-INF的目的的保护文件资源，只能通过程序内部跳转才能访问，我们的权限拦截器或其他权限处理只要加到action上就可以了。  -->
    <!--<constant name="struts.convention.result.path" value="/WEB-INF/content/" />-->
 <!-- 国际化资源文件名称 -->
    <!--<constant name="struts.custom.i18n.resources" value="MessageResources" />-->
    <!--<package name="default" extends="rest-default" namespace="/">-->
        <!--&lt;!&ndash;<action name="*.jsp">&ndash;&gt;-->

            <!--&lt;!&ndash;<result>/WEB-INF/{1}.jsp</result>&ndash;&gt;-->



    <!--</package>-->
   <!--  定义根包，定义一些拦截器 ，拦截器栈，默认拦截器-->
   <package name="basePackage"  extends="struts-default">  
         <interceptors>    
             <interceptor name="permission" class="com.wangzhe.interceptor.PermissionInterceptor">    
                <param name="includeMethods">deleteUser,deleteAccount,deleteRecord</param>    
             </interceptor>
             
			<interceptor-stack name="permissionStack">
				<interceptor-ref name="permission"/>
                <interceptor-ref name="defaultStack"/>
            </interceptor-stack>   
        </interceptors>   
        <default-interceptor-ref name="permissionStack"></default-interceptor-ref>
   </package>
<!-- 通配符配置action请求，类名，方法名，返回页面 -->
<package name="action" namespace="/" extends="basePackage">
  <action name="delete*" class="com.wangzhe.action.{1}Action" method="delete{1}">
     <result name="success">/all{1}</result>
     <!--  <result name="input">/all{1}</result>-->
      <result name="error">/all{1}</result>
      <result name="aAdvanSearch">/accoutAdvanSearchResult</result>
      <result name="recentlyAccount">/receAccoutList</result>
   </action>
 </package>

</struts>

